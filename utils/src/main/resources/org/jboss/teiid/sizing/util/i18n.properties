#
# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.
#

TeiidUtil.Mode.sizeRecommendation=DV Sizing Architecture Tool - This tool is designed to help you to determine the hardware and software requirements to run the JBoss Data Virtualization Server.
TeiidUtil.Mode.serialization=Serialization Tool - This tool is used to estimate how much time took for serializing the results and put on the socket.
TeiidUtil.Mode.deserialization=Deserialization Tool -This tool is used to estimate how much time took to deserialize rows coming back from source.

TeiidUtil.Mode.sizeRecommendation.title=There have around 10 - 15 questions, after all questions are answered and submitted, corresponding recommendations will be presented. The recommendations including: 
TeiidUtil.Mode.sizeRecommendation.item1=How many servers are need, with how many cores?
TeiidUtil.Mode.sizeRecommendation.item2=How much memory/JVM size for each node?
TeiidUtil.Mode.sizeRecommendation.item3=Suggestions of Supported Configurations/HA Options/Performance Improvement.

TeiidUtil.Mode.deserialization.desc=Input deserialization size in bytes, the deserialization time in millisecond will output correspondingly. 
TeiidUtil.Mode.serialization.desc=Input serialization size in bytes, the serialization time in millisecond will output correspondingly.

TeiidUtil.Mode.deserialization.input=Input deserialization size:
TeiidUtil.Mode.serialization.input=Input serialization size:

TeiidUtil.Recommendation.ReadFromCli=Answer questions from command line(if No, pre-answered results in configuration file will be used)?

TeiidUtil.Recommendation.JVM.Bit=Recommend to use 64 bit JVM
TeiidUtil.Recommendation.JVM.Summary={0}+ GB JVM heap size for integrating {1} data sources and supporting {2} concurrent queries.
TeiidUtil.Recommendation.JVM.Append= We encourage run {0} nodes with JVM heap size {1}+ GB each.

TeiidUtil.Recommendation.Cores={0}+ cores modern multi-core or multi-socket with multi-core server
TeiidUtil.Recommendation.Cores.link1=Red Hat Certified Hardware
TeiidUtil.Recommendation.Cores.link2=Red Hat Hardware Catalog Home

TeiidUtil.Recommendation.Disk=20+ GB Disk Space is minimum recommendation, 100+ GB Disk Space should be good
TeiidUtil.Recommendation.Disk.item1=1 GB disk for installed product files
TeiidUtil.Recommendation.Disk.item2=5+ GB for log files and deployed artifacts
TeiidUtil.Recommendation.Disk.item3=15 GB (default) for BufferManager maxBufferSpace

TeiidUtil.Recommendation.Suggestion.SupportedConfiguration=Red Hat JBoss Data Virtualization 6 Supported Configurations
TeiidUtil.Recommendation.Suggestion.HA=Load Balancing / HA Options


## Question usede to JVM heap caculation
sizeRecommendation.datasources.count=What is the total number of data sources going to be integrated?
sizeRecommendation.queries.concurrent=How many concurrent queries at peak load time do you want to support?

## Question use to cpu core caculation
sizeRecommendation.queries.per.second=How many client queries needs to be supported per second?
sizeRecommendation.row.count.each=Average row count from each physical source?
sizeRecommendation.row.size.each=What is the average row size in bytes that is returned from each source?
sizeRecommendation.avg.time.each=Average time in milliseconds by each source to return a result?
sizeRecommendation.row.size.federated=What is average row size that expected as result of federated query in bytes?
sizeRecommendation.row.count.federated=Average row count expected as result of federated query?
sizeRecommendation.avg.time.sample=Average time taken in milliseconds to execute a client query in sample runs?
sizeRecommendation.sorts.aggregations=Does client query doing aggregations, sorts or view transformations doing sorts and aggregations?